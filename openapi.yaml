openapi: 3.0.3
info:
  title: API Mon Projet
  version: 1.0.0
  description: Documentation de l'API pour le backend Django
paths:
  /api/v1/auth/login/:
    post:
      operationId: api_v1_auth_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/v1/auth/logout/:
    post:
      operationId: api_v1_auth_logout_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Logout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Logout'
      security:
      - jwtAuth: []
      responses:
        '205':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logout'
          description: ''
  /api/v1/auth/register/:
    post:
      operationId: api_v1_auth_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
  /api/v1/batches/:
    get:
      operationId: api_v1_batches_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBatchList'
          description: ''
    post:
      operationId: api_v1_batches_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Batch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Batch'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ''
  /api/v1/batches/{id}/:
    get:
      operationId: api_v1_batches_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ''
    put:
      operationId: api_v1_batches_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Batch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Batch'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ''
    patch:
      operationId: api_v1_batches_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBatch'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ''
    delete:
      operationId: api_v1_batches_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/categories/:
    get:
      operationId: api_v1_categories_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: api_v1_categories_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/categories/{id}/:
    get:
      operationId: api_v1_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: api_v1_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: api_v1_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: api_v1_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/clients/:
    get:
      operationId: api_v1_clients_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClientProfileList'
          description: ''
    post:
      operationId: api_v1_clients_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientProfile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfile'
          description: ''
  /api/v1/clients/{id}/:
    get:
      operationId: api_v1_clients_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfile'
          description: ''
    put:
      operationId: api_v1_clients_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientProfile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfile'
          description: ''
    patch:
      operationId: api_v1_clients_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClientProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClientProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClientProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfile'
          description: ''
    delete:
      operationId: api_v1_clients_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/dashboard/:
    get:
      operationId: api_v1_dashboard_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: Données du dashboard
  /api/v1/deliveries/:
    get:
      operationId: api_v1_deliveries_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeliveryList'
          description: ''
    post:
      operationId: api_v1_deliveries_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Delivery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Delivery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Delivery'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
          description: ''
  /api/v1/deliveries/{id}/:
    get:
      operationId: api_v1_deliveries_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Livraison.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
          description: ''
    put:
      operationId: api_v1_deliveries_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Livraison.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Delivery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Delivery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Delivery'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
          description: ''
    patch:
      operationId: api_v1_deliveries_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Livraison.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDelivery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDelivery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDelivery'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
          description: ''
    delete:
      operationId: api_v1_deliveries_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Livraison.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/deliveries/{id}/mark_finished/:
    post:
      operationId: api_v1_deliveries_mark_finished_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Livraison.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Delivery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Delivery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Delivery'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
          description: ''
  /api/v1/deliveries/{id}/predict/:
    post:
      operationId: api_v1_deliveries_predict_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Livraison.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryPredict'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryPredict'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryPredict'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPredict'
          description: ''
  /api/v1/discounts/:
    get:
      operationId: api_v1_discounts_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductDiscountList'
          description: ''
    post:
      operationId: api_v1_discounts_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDiscount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductDiscount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductDiscount'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDiscount'
          description: ''
  /api/v1/discounts/{id}/:
    get:
      operationId: api_v1_discounts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDiscount'
          description: ''
    put:
      operationId: api_v1_discounts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDiscount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductDiscount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductDiscount'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDiscount'
          description: ''
    patch:
      operationId: api_v1_discounts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductDiscount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductDiscount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductDiscount'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDiscount'
          description: ''
    delete:
      operationId: api_v1_discounts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/exchanges/:
    get:
      operationId: api_v1_exchanges_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExchangeRequestList'
          description: ''
    post:
      operationId: api_v1_exchanges_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExchangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExchangeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeRequest'
          description: ''
  /api/v1/exchanges/{id}/:
    get:
      operationId: api_v1_exchanges_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeRequest'
          description: ''
    put:
      operationId: api_v1_exchanges_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExchangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExchangeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeRequest'
          description: ''
    patch:
      operationId: api_v1_exchanges_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExchangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExchangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExchangeRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeRequest'
          description: ''
    delete:
      operationId: api_v1_exchanges_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/invoices/:
    get:
      operationId: api_v1_invoices_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceList'
          description: ''
    post:
      operationId: api_v1_invoices_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /api/v1/invoices/{id}/:
    get:
      operationId: api_v1_invoices_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    put:
      operationId: api_v1_invoices_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    patch:
      operationId: api_v1_invoices_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    delete:
      operationId: api_v1_invoices_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/loyalty/:
    get:
      operationId: api_v1_loyalty_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyProgram'
          description: ''
  /api/v1/loyalty-programs/:
    get:
      operationId: api_v1_loyalty_programs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLoyaltyProgramList'
          description: ''
    post:
      operationId: api_v1_loyalty_programs_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyProgram'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoyaltyProgram'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoyaltyProgram'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyProgram'
          description: ''
  /api/v1/notifications/:
    get:
      operationId: api_v1_notifications_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
    post:
      operationId: api_v1_notifications_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/notifications/{id}/:
    get:
      operationId: api_v1_notifications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    put:
      operationId: api_v1_notifications_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    patch:
      operationId: api_v1_notifications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    delete:
      operationId: api_v1_notifications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/order-lines/:
    get:
      operationId: api_v1_order_lines_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderLineList'
          description: ''
    post:
      operationId: api_v1_order_lines_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderLine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderLine'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderLine'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderLine'
          description: ''
  /api/v1/order-lines/{id}/:
    get:
      operationId: api_v1_order_lines_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderLine'
          description: ''
    put:
      operationId: api_v1_order_lines_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderLine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderLine'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderLine'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderLine'
          description: ''
    patch:
      operationId: api_v1_order_lines_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderLine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderLine'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderLine'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderLine'
          description: ''
    delete:
      operationId: api_v1_order_lines_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/orders/:
    get:
      operationId: api_v1_orders_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
    post:
      operationId: api_v1_orders_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderWrite'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrite'
          description: ''
  /api/v1/orders/{id}/:
    get:
      operationId: api_v1_orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Commande.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_v1_orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Commande.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderWrite'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrite'
          description: ''
    patch:
      operationId: api_v1_orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Commande.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderWrite'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrite'
          description: ''
    delete:
      operationId: api_v1_orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Commande.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/orders/{id}/predict_sales/:
    post:
      operationId: api_v1_orders_predict_sales_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Commande.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/v1/payment-logs/:
    get:
      operationId: api_v1_payment_logs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentLogList'
          description: ''
    post:
      operationId: api_v1_payment_logs_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentLog'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLog'
          description: ''
  /api/v1/payment-logs/{id}/:
    get:
      operationId: api_v1_payment_logs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLog'
          description: ''
    put:
      operationId: api_v1_payment_logs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentLog'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLog'
          description: ''
    patch:
      operationId: api_v1_payment_logs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaymentLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPaymentLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPaymentLog'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLog'
          description: ''
    delete:
      operationId: api_v1_payment_logs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/payments/:
    post:
      operationId: api_v1_payments_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/v1/predict/:
    post:
      operationId: api_v1_predict_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SalesInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SalesInput'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: Prédiction
  /api/v1/predict/delivery/:
    post:
      operationId: api_v1_predict_delivery_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryInput'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPredict'
          description: ''
  /api/v1/predict/inventory/:
    post:
      operationId: api_v1_predict_inventory_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryInput'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryPredict'
          description: ''
  /api/v1/predict/sales/:
    post:
      operationId: api_v1_predict_sales_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SalesInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SalesInput'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesPredict'
          description: ''
  /api/v1/products/:
    get:
      operationId: api_v1_products_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: api_v1_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/profile/:
    get:
      operationId: api_v1_profile_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: api_v1_profile_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/v1/promocodes/:
    get:
      operationId: api_v1_promocodes_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPromoCodeList'
          description: ''
    post:
      operationId: api_v1_promocodes_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromoCode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PromoCode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PromoCode'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoCode'
          description: ''
  /api/v1/promocodes/{id}/:
    get:
      operationId: api_v1_promocodes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoCode'
          description: ''
    put:
      operationId: api_v1_promocodes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromoCode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PromoCode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PromoCode'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoCode'
          description: ''
    patch:
      operationId: api_v1_promocodes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPromoCode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPromoCode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPromoCode'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoCode'
          description: ''
    delete:
      operationId: api_v1_promocodes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/proofs/:
    get:
      operationId: api_v1_proofs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProofList'
          description: ''
    post:
      operationId: api_v1_proofs_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proof'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Proof'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Proof'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proof'
          description: ''
  /api/v1/proofs/{id}/:
    get:
      operationId: api_v1_proofs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proof'
          description: ''
    put:
      operationId: api_v1_proofs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proof'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Proof'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Proof'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proof'
          description: ''
    patch:
      operationId: api_v1_proofs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProof'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProof'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProof'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proof'
          description: ''
    delete:
      operationId: api_v1_proofs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/refunds/:
    post:
      operationId: api_v1_refunds_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RefundRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RefundRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundRequest'
          description: ''
  /api/v1/reviews/:
    post:
      operationId: api_v1_reviews_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReview'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
  /api/v1/stock-alerts/:
    get:
      operationId: api_v1_stock_alerts_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStockAlertList'
          description: ''
    post:
      operationId: api_v1_stock_alerts_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAlert'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StockAlert'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StockAlert'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockAlert'
          description: ''
  /api/v1/stock-alerts/{id}/:
    get:
      operationId: api_v1_stock_alerts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockAlert'
          description: ''
    put:
      operationId: api_v1_stock_alerts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAlert'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StockAlert'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StockAlert'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockAlert'
          description: ''
    patch:
      operationId: api_v1_stock_alerts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStockAlert'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStockAlert'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStockAlert'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockAlert'
          description: ''
    delete:
      operationId: api_v1_stock_alerts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/stock-levels/:
    get:
      operationId: api_v1_stock_levels_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStockLevelList'
          description: ''
    post:
      operationId: api_v1_stock_levels_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockLevel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StockLevel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StockLevel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockLevel'
          description: ''
  /api/v1/stock-levels/{id}/:
    get:
      operationId: api_v1_stock_levels_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockLevel'
          description: ''
    put:
      operationId: api_v1_stock_levels_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockLevel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StockLevel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StockLevel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockLevel'
          description: ''
    patch:
      operationId: api_v1_stock_levels_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStockLevel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStockLevel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStockLevel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockLevel'
          description: ''
    delete:
      operationId: api_v1_stock_levels_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/stock-movements/:
    get:
      operationId: api_v1_stock_movements_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStockMovementList'
          description: ''
    post:
      operationId: api_v1_stock_movements_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockMovement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StockMovement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StockMovement'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockMovement'
          description: ''
  /api/v1/stock-movements/{id}/:
    get:
      operationId: api_v1_stock_movements_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockMovement'
          description: ''
    put:
      operationId: api_v1_stock_movements_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockMovement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StockMovement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StockMovement'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockMovement'
          description: ''
    patch:
      operationId: api_v1_stock_movements_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStockMovement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStockMovement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStockMovement'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockMovement'
          description: ''
    delete:
      operationId: api_v1_stock_movements_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/suppliers/:
    get:
      operationId: api_v1_suppliers_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSupplierList'
          description: ''
    post:
      operationId: api_v1_suppliers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
  /api/v1/suppliers/{id}/:
    get:
      operationId: api_v1_suppliers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    put:
      operationId: api_v1_suppliers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    patch:
      operationId: api_v1_suppliers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    delete:
      operationId: api_v1_suppliers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/tracking-info/:
    get:
      operationId: api_v1_tracking_info_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTrackingInfoList'
          description: ''
    post:
      operationId: api_v1_tracking_info_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrackingInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrackingInfo'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingInfo'
          description: ''
  /api/v1/tracking-info/{id}/:
    get:
      operationId: api_v1_tracking_info_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingInfo'
          description: ''
    put:
      operationId: api_v1_tracking_info_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrackingInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrackingInfo'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingInfo'
          description: ''
    patch:
      operationId: api_v1_tracking_info_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTrackingInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTrackingInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTrackingInfo'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingInfo'
          description: ''
    delete:
      operationId: api_v1_tracking_info_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/warehouses/:
    get:
      operationId: api_v1_warehouses_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWarehouseList'
          description: ''
    post:
      operationId: api_v1_warehouses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Warehouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Warehouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Warehouse'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
          description: ''
  /api/v1/warehouses/{id}/:
    get:
      operationId: api_v1_warehouses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
          description: ''
    put:
      operationId: api_v1_warehouses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Warehouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Warehouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Warehouse'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
          description: ''
    patch:
      operationId: api_v1_warehouses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWarehouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWarehouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWarehouse'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
          description: ''
    delete:
      operationId: api_v1_warehouses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /auth/jwt/create/:
    post:
      operationId: auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/jwt/verify/:
    post:
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /auth/users/:
    get:
      operationId: auth_users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRegistrationList'
          description: ''
    post:
      operationId: auth_users_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreatePasswordRetype'
          description: ''
  /auth/users/{id}/:
    get:
      operationId: auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Utilisateur.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
    put:
      operationId: auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Utilisateur.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
    patch:
      operationId: auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Utilisateur.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRegistration'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
    delete:
      operationId: auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Utilisateur.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /auth/users/activation/:
    post:
      operationId: auth_users_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /auth/users/me/:
    get:
      operationId: auth_users_me_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_me_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_me_partial_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_me_destroy
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /auth/users/resend_activation/:
    post:
      operationId: auth_users_resend_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_password/:
    post:
      operationId: auth_users_reset_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_password_confirm/:
    post:
      operationId: auth_users_reset_password_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /auth/users/reset_username/:
    post:
      operationId: auth_users_reset_username_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_username_confirm/:
    post:
      operationId: auth_users_reset_username_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /auth/users/set_password/:
    post:
      operationId: auth_users_set_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /auth/users/set_username/:
    post:
      operationId: auth_users_set_username_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /ia/predict/form/:
    post:
      operationId: ia_predict_form_create
      tags:
      - ia
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SalesInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SalesInput'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: Prédiction
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    Batch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          title: Produit
        lot_number:
          type: string
          title: Numéro de lot
          maxLength: 50
        expiration_date:
          type: string
          format: date
          nullable: true
          title: Date d'expiration
      required:
      - id
      - lot_number
      - product
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Catégorie
          description: Saisir ou choisir une catégorie existante
          maxLength: 50
      required:
      - id
      - name
    ClientProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          title: Utilisateur
        location:
          type: string
          title: Localisation
          maxLength: 100
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Solde
        points:
          type: integer
          readOnly: true
      required:
      - id
      - location
      - points
      - user
    Delivery:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        deliverer:
          type: integer
          nullable: true
          title: Livreur
        order:
          type: integer
        product:
          type: integer
          nullable: true
          title: Produit
        type:
          $ref: '#/components/schemas/TypeEnum'
        delivery_status:
          allOf:
          - $ref: '#/components/schemas/DeliveryStatusEnum'
          title: Statut livraison
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Créée le
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Mis à jour le
      required:
      - created_at
      - description
      - id
      - order
      - type
      - updated_at
    DeliveryInput:
      type: object
      properties:
        client:
          type: object
          additionalProperties:
            type: number
            format: double
          description: Dictionnaire contenant 'lat' et 'lng' du client
        total_quantity:
          type: integer
          minimum: 0
          description: Quantité totale commandée pour l'estimation
      required:
      - client
      - total_quantity
    DeliveryPredict:
      type: object
      properties:
        product_id:
          type: integer
        quantity:
          type: integer
        prediction:
          type: string
          readOnly: true
      required:
      - prediction
      - product_id
      - quantity
    DeliveryStatusEnum:
      enum:
      - EN_ATTENTE
      - EN_COURS
      - TERMINEE
      type: string
      description: |-
        * `EN_ATTENTE` - En attente
        * `EN_COURS` - En cours
        * `TERMINEE` - Terminée
    ExchangeRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        return_request:
          type: integer
          title: Demande de retour
        replacement:
          type: integer
          title: Produit de remplacement
        exchange_status:
          allOf:
          - $ref: '#/components/schemas/ExchangeStatusEnum'
          title: Statut échange
      required:
      - id
      - replacement
      - return_request
    ExchangeStatusEnum:
      enum:
      - PENDING
      - COMPLETED
      type: string
      description: |-
        * `PENDING` - En attente
        * `COMPLETED` - Terminé
    InventoryInput:
      type: object
      properties:
        product_id:
          type: integer
          description: ID du produit
        window_days:
          type: integer
          minimum: 1
          default: 30
          description: Nombre de jours passés pour la prédiction de stock
      required:
      - product_id
    InventoryPredict:
      type: object
      properties:
        product_id:
          type: integer
        days:
          type: integer
        predicted_inventory:
          type: integer
          readOnly: true
      required:
      - days
      - predicted_inventory
      - product_id
    Invoice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          title: Commande
        pdf:
          type: string
          format: uri
          title: Fichier PDF
        issued_at:
          type: string
          format: date-time
          readOnly: true
          title: Émise le
      required:
      - id
      - issued_at
      - order
      - pdf
    Login:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - login
      - password
    Logout:
      type: object
      properties:
        message:
          type: string
          readOnly: true
      required:
      - message
    LoyaltyProgram:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        client:
          type: integer
        points:
          type: integer
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
          title: Mis à jour le
        transactions:
          readOnly: true
      required:
      - client
      - id
      - last_updated
      - points
      - transactions
    MethodEnum:
      enum:
      - CARD
      - BANK
      - MOBILE
      - PAYPAL
      - APPLE_PAY
      - GOOGLE_PAY
      type: string
      description: |-
        * `CARD` - Carte bancaire
        * `BANK` - Virement
        * `MOBILE` - Mobile Money
        * `PAYPAL` - PayPal
        * `APPLE_PAY` - Apple Pay
        * `GOOGLE_PAY` - Google Pay
    MovementTypeEnum:
      enum:
      - IN
      - OUT
      - ADJ
      type: string
      description: |-
        * `IN` - Entrée
        * `OUT` - Sortie
        * `ADJ` - Ajustement
    Notification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          title: Utilisateur
        message:
          type: string
        link:
          type: string
          format: uri
          nullable: true
          title: Lien
          maxLength: 200
        read:
          type: boolean
          title: Lu
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Créée le
      required:
      - created_at
      - id
      - message
      - user
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        client:
          allOf:
          - $ref: '#/components/schemas/ClientProfile'
          readOnly: true
        date_ordered:
          type: string
          format: date-time
          readOnly: true
          title: Date
        order_status:
          allOf:
          - $ref: '#/components/schemas/OrderStatusEnum'
          title: Statut commande
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        lines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLine'
      required:
      - client
      - date_ordered
      - id
      - lines
      - total
    OrderLine:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        quantity:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
          title: Quantité
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Prix unitaire
      required:
      - id
      - product
      - quantity
      - unit_price
    OrderLineWrite:
      type: object
      properties:
        product:
          type: integer
          title: Produit
        quantity:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
          title: Quantité
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Prix unitaire
      required:
      - product
      - quantity
      - unit_price
    OrderStatusEnum:
      enum:
      - PENDING
      - EN_COURS
      - DELIVERED
      - CANCELLED
      type: string
      description: |-
        * `PENDING` - En attente
        * `EN_COURS` - En cours
        * `DELIVERED` - Livrée
        * `CANCELLED` - Annulée
    OrderWrite:
      type: object
      properties:
        client:
          type: integer
        order_status:
          allOf:
          - $ref: '#/components/schemas/OrderStatusEnum'
          title: Statut commande
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        lines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLineWrite'
      required:
      - client
      - lines
      - total
    PaginatedBatchList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Batch'
    PaginatedCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedClientProfileList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClientProfile'
    PaginatedDeliveryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Delivery'
    PaginatedExchangeRequestList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExchangeRequest'
    PaginatedInvoiceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
    PaginatedLoyaltyProgramList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyProgram'
    PaginatedNotificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PaginatedOrderLineList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderLine'
    PaginatedOrderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedPaymentLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentLog'
    PaginatedProductDiscountList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductDiscount'
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedPromoCodeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PromoCode'
    PaginatedProofList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Proof'
    PaginatedRegistrationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Registration'
    PaginatedStockAlertList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StockAlert'
    PaginatedStockLevelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StockLevel'
    PaginatedStockMovementList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StockMovement'
    PaginatedSupplierList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Supplier'
    PaginatedTrackingInfoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TrackingInfo'
    PaginatedWarehouseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Warehouse'
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedBatch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          title: Produit
        lot_number:
          type: string
          title: Numéro de lot
          maxLength: 50
        expiration_date:
          type: string
          format: date
          nullable: true
          title: Date d'expiration
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Catégorie
          description: Saisir ou choisir une catégorie existante
          maxLength: 50
    PatchedClientProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          title: Utilisateur
        location:
          type: string
          title: Localisation
          maxLength: 100
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Solde
        points:
          type: integer
          readOnly: true
    PatchedDelivery:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        deliverer:
          type: integer
          nullable: true
          title: Livreur
        order:
          type: integer
        product:
          type: integer
          nullable: true
          title: Produit
        type:
          $ref: '#/components/schemas/TypeEnum'
        delivery_status:
          allOf:
          - $ref: '#/components/schemas/DeliveryStatusEnum'
          title: Statut livraison
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Créée le
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Mis à jour le
    PatchedExchangeRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        return_request:
          type: integer
          title: Demande de retour
        replacement:
          type: integer
          title: Produit de remplacement
        exchange_status:
          allOf:
          - $ref: '#/components/schemas/ExchangeStatusEnum'
          title: Statut échange
    PatchedInvoice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          title: Commande
        pdf:
          type: string
          format: uri
          title: Fichier PDF
        issued_at:
          type: string
          format: date-time
          readOnly: true
          title: Émise le
    PatchedNotification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          title: Utilisateur
        message:
          type: string
        link:
          type: string
          format: uri
          nullable: true
          title: Lien
          maxLength: 200
        read:
          type: boolean
          title: Lu
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Créée le
    PatchedOrderLine:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        quantity:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
          title: Quantité
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Prix unitaire
    PatchedOrderWrite:
      type: object
      properties:
        client:
          type: integer
        order_status:
          allOf:
          - $ref: '#/components/schemas/OrderStatusEnum'
          title: Statut commande
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        lines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLineWrite'
    PatchedPaymentLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          title: Commande
        attempt_time:
          type: string
          format: date-time
          readOnly: true
          title: Tentative le
        payment_status:
          type: string
          title: Statut paiement
          maxLength: 20
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Montant
        info: {}
    PatchedProductDiscount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          title: Produit
        discount_percent:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: '% de remise'
    PatchedPromoCode:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          maxLength: 20
        discount_percent:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: '% de remise'
        valid_from:
          type: string
          format: date-time
          title: Valide à partir de
        valid_to:
          type: string
          format: date-time
          title: Valide jusqu'à
        usage_limit:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
          nullable: true
          title: Limite d'utilisation
    PatchedProof:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        delivery:
          type: integer
          title: Livraison
        image:
          type: string
          format: uri
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
          title: Uploadé le
    PatchedRegistration:
      type: object
      properties:
        first_name:
          type: string
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          title: Nom
          maxLength: 150
        email:
          type: string
          format: email
          title: Courriel
          maxLength: 254
        password:
          type: string
          writeOnly: true
    PatchedStockAlert:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          title: Produit
        threshold:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
          title: Seuil
        is_active:
          type: boolean
          title: Active
    PatchedStockLevel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          title: Produit
        warehouse:
          type: integer
          title: Entrepôt
        quantity:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
          title: Quantité
    PatchedStockMovement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          title: Produit
        warehouse:
          type: integer
          title: Entrepôt
        batch:
          type: integer
          nullable: true
          title: Lot
        movement_type:
          allOf:
          - $ref: '#/components/schemas/MovementTypeEnum'
          title: Type de mouvement
        quantity:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
          title: Quantité
        timestamp:
          type: string
          format: date-time
          readOnly: true
          title: Date et heure
        user:
          type: integer
          nullable: true
          title: Utilisateur
    PatchedSupplier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 100
        contact:
          type: string
          maxLength: 100
        product_type:
          allOf:
          - $ref: '#/components/schemas/ProductTypeEnum'
          title: Type
        address:
          type: string
          title: Adresse
        date_added:
          type: string
          format: date-time
          readOnly: true
          title: Date d'ajout
    PatchedTrackingInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        delivery:
          type: integer
          title: Livraison
        tracking_status:
          type: string
          title: Statut des suivis
          maxLength: 50
        location:
          type: string
          title: Localisation
          maxLength: 200
        timestamp:
          type: string
          format: date-time
          readOnly: true
          title: Horodatage
    PatchedUser:
      type: object
      properties:
        email:
          type: string
          format: email
          readOnly: true
          title: Courriel
        first_name:
          type: string
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          title: Nom
          maxLength: 150
        id:
          type: integer
          readOnly: true
    PatchedWarehouse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 100
        location:
          type: string
          title: Localisation
          maxLength: 200
    Payment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          title: Commande
        method:
          allOf:
          - $ref: '#/components/schemas/MethodEnum'
          title: Moyen de paiement
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Montant
        payment_status:
          allOf:
          - $ref: '#/components/schemas/PaymentStatusEnum'
          title: Statut paiement
        paid_at:
          type: string
          format: date-time
          nullable: true
          title: Payé le
      required:
      - amount
      - id
      - method
      - order
    PaymentLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          title: Commande
        attempt_time:
          type: string
          format: date-time
          readOnly: true
          title: Tentative le
        payment_status:
          type: string
          title: Statut paiement
          maxLength: 20
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Montant
        info: {}
      required:
      - amount
      - attempt_time
      - id
      - order
      - payment_status
    PaymentStatusEnum:
      enum:
      - PENDING
      - PAID
      - FAILED
      type: string
      description: |-
        * `PENDING` - En attente
        * `PAID` - Payé
        * `FAILED` - Échoué
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          type: string
        image:
          type: string
          format: uri
        name:
          type: string
          title: Nom
          maxLength: 100
        description:
          type: string
          nullable: true
        quantity_in_stock:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
          title: Quantité en stock
        unit:
          allOf:
          - $ref: '#/components/schemas/UnitEnum'
          title: Unité
        purchase_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Prix d'achat
        selling_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Prix de vente
        expiration_date:
          type: string
          format: date
          nullable: true
          title: Date d'expiration
        qr_code_image:
          type: string
          format: uri
          nullable: true
          title: QR Code
      required:
      - category
      - id
      - name
      - purchase_price
      - selling_price
      - unit
    ProductDiscount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          title: Produit
        discount_percent:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: '% de remise'
      required:
      - discount_percent
      - id
      - product
    ProductReview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        client:
          type: integer
        product:
          type: integer
          title: Produit
        rating:
          allOf:
          - $ref: '#/components/schemas/RatingEnum'
          title: Note
          minimum: 0
          maximum: 65535
        comment:
          type: string
          title: Commentaire
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Créé le
        verified_purchase:
          type: boolean
          title: Achat vérifié
      required:
      - client
      - created_at
      - id
      - product
      - rating
    ProductTypeEnum:
      enum:
      - ENGRAIS
      - SEMENCES
      - OUTILS
      type: string
      description: |-
        * `ENGRAIS` - Engrais
        * `SEMENCES` - Semences
        * `OUTILS` - Outils agricoles
    Profile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Courriel
          maxLength: 254
        first_name:
          type: string
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          title: Nom
          maxLength: 150
      required:
      - email
      - id
      - username
    PromoCode:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          maxLength: 20
        discount_percent:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: '% de remise'
        valid_from:
          type: string
          format: date-time
          title: Valide à partir de
        valid_to:
          type: string
          format: date-time
          title: Valide jusqu'à
        usage_limit:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
          nullable: true
          title: Limite d'utilisation
      required:
      - code
      - discount_percent
      - id
      - valid_from
      - valid_to
    Proof:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        delivery:
          type: integer
          title: Livraison
        image:
          type: string
          format: uri
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
          title: Uploadé le
      required:
      - delivery
      - id
      - image
      - uploaded_at
    RatingEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      description: |-
        * `1` - ★☆☆☆☆
        * `2` - ★★☆☆☆
        * `3` - ★★★☆☆
        * `4` - ★★★★☆
        * `5` - ★★★★★
    RefundRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        days_remaining:
          type: integer
          readOnly: true
        reason:
          type: string
          title: Motif
        evidence:
          type: string
          format: uri
          title: Pièce justificative
          pattern: (?:pdf|jpg|png)$
        refund_status:
          allOf:
          - $ref: '#/components/schemas/RefundStatusEnum'
          readOnly: true
          title: Statut remboursement
        requested_at:
          type: string
          format: date-time
          readOnly: true
          title: Demandé le
        processed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Traité le
        order:
          type: integer
          title: Commande
      required:
      - days_remaining
      - evidence
      - id
      - order
      - processed_at
      - reason
      - refund_status
      - requested_at
    RefundStatusEnum:
      enum:
      - PENDING
      - APPROVED
      - REJECTED
      type: string
      description: |-
        * `PENDING` - En attente
        * `APPROVED` - Approuvé
        * `REJECTED` - Rejeté
    Registration:
      type: object
      properties:
        first_name:
          type: string
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          title: Nom
          maxLength: 150
        email:
          type: string
          format: email
          title: Courriel
          maxLength: 254
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    SalesInput:
      type: object
      properties:
        product_id:
          type: integer
          description: ID du produit
        history_days:
          type: integer
          minimum: 1
          default: 30
          description: Nombre de jours d'historique de ventes à considérer
        forecast_days:
          type: integer
          minimum: 1
          default: 30
          description: Nombre de jours à prédire
      required:
      - product_id
    SalesPredict:
      type: object
      properties:
        product_id:
          type: integer
        period:
          type: string
        predicted_sales:
          type: integer
          readOnly: true
      required:
      - period
      - predicted_sales
      - product_id
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: Courriel
          maxLength: 254
      required:
      - current_password
      - new_email
    StockAlert:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          title: Produit
        threshold:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
          title: Seuil
        is_active:
          type: boolean
          title: Active
      required:
      - id
      - product
      - threshold
    StockLevel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          title: Produit
        warehouse:
          type: integer
          title: Entrepôt
        quantity:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
          title: Quantité
      required:
      - id
      - product
      - quantity
      - warehouse
    StockMovement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          title: Produit
        warehouse:
          type: integer
          title: Entrepôt
        batch:
          type: integer
          nullable: true
          title: Lot
        movement_type:
          allOf:
          - $ref: '#/components/schemas/MovementTypeEnum'
          title: Type de mouvement
        quantity:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
          title: Quantité
        timestamp:
          type: string
          format: date-time
          readOnly: true
          title: Date et heure
        user:
          type: integer
          nullable: true
          title: Utilisateur
      required:
      - id
      - movement_type
      - product
      - quantity
      - timestamp
      - warehouse
    Supplier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 100
        contact:
          type: string
          maxLength: 100
        product_type:
          allOf:
          - $ref: '#/components/schemas/ProductTypeEnum'
          title: Type
        address:
          type: string
          title: Adresse
        date_added:
          type: string
          format: date-time
          readOnly: true
          title: Date d'ajout
      required:
      - address
      - contact
      - date_added
      - id
      - name
      - product_type
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    TrackingInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        delivery:
          type: integer
          title: Livraison
        tracking_status:
          type: string
          title: Statut des suivis
          maxLength: 50
        location:
          type: string
          title: Localisation
          maxLength: 200
        timestamp:
          type: string
          format: date-time
          readOnly: true
          title: Horodatage
      required:
      - delivery
      - id
      - location
      - timestamp
      - tracking_status
    TypeEnum:
      enum:
      - LIVRAISON
      - STOCK
      - REMBOURSEMENT
      - AUTRE
      type: string
      description: |-
        * `LIVRAISON` - Problème de livraison
        * `STOCK` - Intervention stock
        * `REMBOURSEMENT` - Suivi remboursement
        * `AUTRE` - Autre
    UnitEnum:
      enum:
      - t
      - kg
      - g
      - l
      type: string
      description: |-
        * `t` - Tonne
        * `kg` - Kilogramme
        * `g` - Gramme
        * `l` - Litre
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          readOnly: true
          title: Courriel
        first_name:
          type: string
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          title: Nom
          maxLength: 150
        id:
          type: integer
          readOnly: true
      required:
      - email
      - id
    UserCreatePasswordRetype:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Courriel
          maxLength: 254
        first_name:
          type: string
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          title: Nom
          maxLength: 150
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
        re_password:
          type: string
      required:
      - email
      - id
      - password
      - re_password
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: Courriel
          maxLength: 254
      required:
      - new_email
    Warehouse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 100
        location:
          type: string
          title: Localisation
          maxLength: 200
      required:
      - id
      - location
      - name
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
